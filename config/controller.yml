- name: AAP | Config As Code | Configure the AAP Controller
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
  - name: AAP | Create AAP Project
    ansible.controller.project:
      name: "{{ aap_controller_project }}"
      organization: Default
      state: present
      scm_type: git
      scm_url: "{{ scm_url }}"
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"

  - name: "AAP | Sync the project {{ aap_controller_project }}"
    ansible.controller.project_update:
      project: "{{ aap_controller_project }}"
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
    when: aap_controller_sync_project | bool

  - name: AAP | Create the Execution environment
    ansible.controller.execution_environment:
      name: "{{ aap_controller_execution_environment }}"
      image: "{{ aap_controller_execution_environment_image }}"
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"

  - name: AAP | Add servicenow.itsm credential type
    ansible.controller.credential_type:
      name: servicenow.itsm
      kind: cloud
      inputs:
        fields:
        - id: snow_url
          type: string
          label: SNOW Instance
        - id: snow_user
          type: string
          label: SNOW Username
        - id: snow_pwd
          type: string
          secret: true
          label: SNOW Password
      injectors:
        extra_vars:
          snow_instance: !unsafe "{{ snow_url }}"
          snow_user: !unsafe "{{ snow_user }}"
          snow_pass: !unsafe "{{ snow_pwd }}"
        env:
          SN_HOST: "{% raw %}{{ snow_url }}{% endraw %}"
          SN_USERNAME: "{% raw %}{{ snow_user }}{% endraw %}"
          SN_PASSWORD: "{% raw %}{{ snow_pwd }}{% endraw %}"
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"

  - name: AAP | Create the servicenow.itsm credential
    ansible.controller.credential:
      name: "{{ aap_controller_snow_credential }}"
      credential_type: servicenow.itsm
      organization: Default
      inputs:
        snow_url: "{{ servicenow_instance_url }}"
        snow_user: "{{ servicenow_instance_user }}"
        snow_pwd: "{{ servicenow_instance_password }}" 
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"

  - name: Issue Resolution
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: Issue Resolution
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: true
      become_enabled: true
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: issue_resolution.yml
      extra_vars:
        category: WebServer
      credentials:
      - "{{ aap_controller_credentials }}"
      state: present

  - name: Setup Database
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: Setup Database
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: false
      become_enabled: true
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: database.yml
      credentials:
      - "{{ aap_controller_credentials }}"
      state: present

  - name: Setup Filesystem
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: Setup Filesystem
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: false
      become_enabled: true
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: filesystem.yml
      credentials:
      - "{{ aap_controller_credentials }}"
      state: present

  - name: Setup Webserver
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: Setup Webserver
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: false
      become_enabled: true
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: apache.yml
      credentials:
      - "{{ aap_controller_credentials }}"
      state: present

  - name: SNOW - Post System Logs
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: SNOW - Post System Logs
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: true
      extra_vars:
        category: xx
        snow_inc_number: INC00
      become_enabled: true
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: snow_log_upload.yml
      credentials:
      - "{{ aap_controller_snow_credential }}"
      state: present

  - name: SNOW - Post Work Notes
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: SNOW - Post Work Notes
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: true
      extra_vars:
        snow_inc_number: INC00
        post_message: Ansible Automation Platform is working on the issue. Updates will follow
      become_enabled: false
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: snow_post_worknote.yml
      credentials:
      - "{{ aap_controller_snow_credential }}"
      state: present

  - name: SNOW - Reassign Incident
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: SNOW - Reassign Incident
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: true
      extra_vars:
        snow_inc_number: INC00
      become_enabled: false
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: snow_reassign_inc.yml
      credentials:
      - "{{ aap_controller_snow_credential }}"
      state: present

  - name: SNOW - Resolve Incident
    ansible.controller.job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: SNOW - Resolve Incident
      job_type: run
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: true
      extra_vars:
        snow_inc_number: INC00
      become_enabled: false
      inventory: "{{ aap_controller_inventory }}"
      project: "{{ aap_controller_project }}"
      execution_environment: "{{ aap_controller_execution_environment }}"
      playbook: snow_resolve_inc.yml
      credentials:
      - "{{ aap_controller_snow_credential }}"
      state: present

  - name: Issue Resolution Workflow
    ansible.controller.workflow_job_template:
      controller_host: "{{ aap_controller_url }}"
      controller_username: "{{ aap_controller_username }}"
      controller_password: "{{ aap_controller_password }}"
      validate_certs: "{{ aap_controller_validate_certs }}"
      name: Issue Resolution Workflow
      organization: Default
      ask_limit_on_launch: true
      ask_variables_on_launch: true
      extra_vars:
        snow_inc_number: INC00
        category: webserver
      inventory: "{{ aap_controller_inventory }}"
      state: present
      destroy_current_nodes: true
      workflow_nodes:
      - identifier: SNOW - Post Work Notes
        unified_job_template:
          organization:
            name: Default
          name: SNOW - Post Work Notes
          type: job_template
        related:
          always_nodes:
          - identifier: SNOW - Post System Logs

      - identifier: SNOW - Post System Logs
        unified_job_template:
          name: SNOW - Post System Logs
          type: job_template
        related:
          always_nodes:
          - identifier: Issue Resolution
      - identifier: Issue Resolution
        unified_job_template:
          name: Issue Resolution
          type: job_template
        related:
          success_nodes:
          - identifier: SNOW - Post System Logs fail
          failure_nodes:
          - identifier: SNOW - Reassign Incident
      - identifier: SNOW - Reassign Incident
        unified_job_template:
          name: SNOW - Reassign Incident
          type: job_template
      - identifier: SNOW - Post System Logs fail
        unified_job_template:
          name: SNOW - Post System Logs
          type: job_template
        related:
          always_nodes:
          - identifier: SNOW - Resolve Incident
      - identifier: SNOW - Resolve Incident
        unified_job_template:
          name: SNOW - Resolve Incident
          type: job_template
